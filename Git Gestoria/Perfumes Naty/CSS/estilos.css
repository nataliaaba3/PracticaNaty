/* Estilos globales */
body {
    font-family: Arial, sans-serif;
    color: darkorange;
    align-items: center;
    margin: 10px;
    padding: auto;
}

header, nav, section, footer {
    background-color: darkorchid;
    text-align: center;
    border-image: auto;
    font-size: 24px;
    color: lightsalmon;
    image-rendering: auto;
    image-resolution: auto;
    padding: 20px;
    align-items: center;
    
}
h1{
    font-size: 50px;
    color: greenyellow;
    text-align: center;
    animation: both;
    
}

h3{
    font-size: 50px;
    font-style: oblique;
    color: wheat;
    text-align: center;
}
.Contacto{
    font-size: 30px;
    color: blanchedalmond;
}
.articulo{
    font-family: fantasy;
    color: blue;
    font-style: oblique;
    font-size: x-large;
}

.about{
    color: goldenrod;
}
div{
    text-align: center;
    font-size: xx-large;
    color: aquamarine;
    background-color: mediumpurple;
    

}
#Card{
    width: 50px;
    border: 1px solid hsl(187, 82%, 42%);
    border-radius: 10PX;
}
img{
    width: auto; text-align: center; height: auto; 
    margin: 15px;
}
#tarjeta h2{
    font-size: 36px;
}
#tarjeta h4{
    font-size: 15px;
    color: white;
    background-color: blueviolet;
}
.mediano{
    font-size: 36px;
    color: greenyellow;
}
.about{
    font-family: 'Ballet', cursive;
    color: blueviolet;
    font-size: 56px;
  
}
.location{
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size: 25px;
    color: orange;
}
#image1{
    width: auto;
    height: auto;
    margin: 5px;
    padding: 5px;
    text-decoration: none;
    display: inline;
}
.IMAGENES {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-around;
        background-color: mediumpurple;
        color: chocolate;
    
}
.contenedor{
    display:grid;
    /* grid-template-columns: auto auto 100px;*/
    grid-template-columns: 10px auto auto auto auto;
    grid-template-rows: 100px 100px auto;
    background-color: blueviolet;
    margin: 1px;
    gap: 1500px;

}
    


/* Estilos específicos para cada página */
/* Define estilos de diseño responsivo utilizando Flexbox o Grid */

.padre{
    display: grid;
    flex-direction: row;
    flex-wrap: wrap;
    
    padding: 1px;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

/* Propiedades Flexbox pero de los elementos hijos:
Estás propiedades las aplicaremos a los div que se encuentran dentro del contenedor padre.
order:; Ordena los elementos hijos según el número que tu le designes.
flex-grow:; Especifica el factor de crecimiento de un elemento flexible. Se especifica qué cantidad de espacio debe ocupar el elemento dentro del contenedor flexible. Si todos los elementos tienen flex-grow 1, el espacio restante se distribuye entre los elementos.
flex-shrink:; Si utilizamos esta propiedad con valor «0» el elemento hijo no podrá hacerse más pequeño que su ancho establecido.
flex-basis:; Con esta propiedad podemos especificar el tamaño inicial que tendrá un elemento hijo.
flex:1 1 auto; Es la propiedad resumida de flex-grow, flex-shrink y flex-basis, generalmente se utiliza con la unidad «1 1 auto».
align-self: auto | flex-start | flex-end | center | baseline | stretch;
Con aling-self podemos posicionar solo un elemento hijo, generando así diferentes posiciones para cada elemento.
*/
.header, .articulo, .izquierda, .derecha, .footer{
    flex-grow: 1;
    flex-basis: 100%; 
    padding:10px;
    animation-duration: 20s;
}

/* media queries */
/* tamaño tablet */
@media all and (min-width: 600px){
    .aside {
        /* flex: <flex-grow> <flex-shrink> <flex-basis> */
        flex: 1 1 auto;
    }
}
/* tamaño pc */
@media all and (min-width: 800px){
    .articulo{flex:2 0;}
    .izquierda{order: 1;}
    .articulo{order: 2;}
    .derecha{order: 3;}
    .footer{order: 4;}
}
   
.header{align-items: center;  background: #581845; color: greenyellow; font-size: 60px; font: bold; text-align: center; animation: alternate;}
.articulo{background: #FFC300}
.izquierda{background-color: blueviolet;}
.derecha{background-color: blueviolet;}
.footer{background-color: blueviolet salmon; font-size: 36px;}

.image2 {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 columnas de igual ancho */
    gap: 10px; /* Espacio entre elementos */
    padding: 10px;
}

.image3{
    display: grid;
    flex-direction: row;
    flex-wrap: wrap;
    
    padding: 1px;
}

.padre{
    display: grid;
    flex-direction: row;
    flex-wrap: wrap;
    text-align: center;
    padding: 10px;
}

/* Propiedades Flexbox pero de los elementos hijos:
Estás propiedades las aplicaremos a los div que se encuentran dentro del contenedor padre.
order:; Ordena los elementos hijos según el número que tu le designes.
flex-grow:; Especifica el factor de crecimiento de un elemento flexible. Se especifica qué cantidad de espacio debe ocupar el elemento dentro del contenedor flexible. Si todos los elementos tienen flex-grow 1, el espacio restante se distribuye entre los elementos.
flex-shrink:; Si utilizamos esta propiedad con valor «0» el elemento hijo no podrá hacerse más pequeño que su ancho establecido.
flex-basis:; Con esta propiedad podemos especificar el tamaño inicial que tendrá un elemento hijo.
flex:1 1 auto; Es la propiedad resumida de flex-grow, flex-shrink y flex-basis, generalmente se utiliza con la unidad «1 1 auto».
align-self: auto | flex-start | flex-end | center | baseline | stretch;
Con aling-self podemos posicionar solo un elemento hijo, generando así diferentes posiciones para cada elemento.
*/
.header, .articulo, .izquierda, .derecha, .footer{
    flex-grow: 1;
    flex-basis: 100%; 
    padding: 10px;
    align-items: center;
}

/* media queries */
/* tamaño tablet */
@media all and (min-width: 600px){
    .aside {
        /* flex: <flex-grow> <flex-shrink> <flex-basis> */
        flex: 1 1 auto;
    }
}
/* tamaño pc */
@media all and (min-width: 800px){
    .articulo{flex:2 0;}
    .izquierda{order: 1;}
    .articulo{order: 2;}
    .derecha{order: 3;}
    .footer{order: 4;}
}
   
.header{background: #581845;}
.articulo{background: #FFC300}
.izquierda{background: #900C3F}
.derecha{background: #C70039}
.footer{background: blueviolet};

.navimagen {
    width: 40px;
    height: 40px;
    padding: 0.5rem;
}

#tel {
    /* display: inline-block; */
    animation: bounce;
    /* referring directly to the animation's @keyframe declaration */
    animation-duration: 2s;
    /* don't forget to set a duration! */
}
